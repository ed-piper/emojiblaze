@using Blazor.Fluxor
@using EmojiBlaze.Web.Store.Game
@using EmojiBlaze.Web.Store.Game.Actions
@inject IState<GameState> GameState
@inject IDispatcher Dispatcher

@if (GameState.Value.GameStage == GameStage.NotStarted)
{
    <div class="row">
        <div class="col">
            <input placeholder="Player Name" @bind="PlayerName" />
            <button @onclick="Add">Add Player</button>
        </div>
    </div>

    @if (CanStartGame)
    {
        <div class="row mt-1">
            <div class="col">
                <button @onclick="StartGame">Start Game</button>
            </div>
        </div>
    }
}

@code {
    private string PlayerName { get; set; }

    private bool CanStartGame => GameState.Value.GameStage != GameStage.InProgress &&
                             GameState.Value.Players.Count > 1;

    private void StartGame()
    {
        Dispatcher.Dispatch(new StartGameAction());
    }

    private void Add()
    {
        Dispatcher.Dispatch(new AddPlayerAction(PlayerName));
        PlayerName = string.Empty;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        GameState.Subscribe(this);
    }
}