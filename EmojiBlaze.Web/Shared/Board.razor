@using Blazor.Fluxor
@using EmojiBlaze.Models.Store.Game
@inject IState<GameState> GameState
@inject IDispatcher Dispatcher
@inherits Blazor.Fluxor.Components.FluxorComponent

@if (GameState.Value.GameStage == GameStage.Completed)
{
    <h1>Game Complete!</h1>
}

@if (GameState.Value.Cards != null && !GameOver)
{
    @foreach (var rowX in GameState.Value.Cards.Select(x => x.X).Distinct())
    {
        <div class="row">
            @foreach (var card in GameState.Value.Cards.Where(x => x.X == rowX))
            {
                <div class="col">
                    <CardView Card="@card"></CardView>
                </div>
            }
        </div>
    }
}

@if (GameOver) { 
    <h1>@Winner has won</h1>
}


@code {

    private bool GameOver => GameState.Value.GameStage == GameStage.Completed;

    //TODO: Handle draws
    private string Winner => GameState.Value.Players.OrderByDescending(x => x.Score).First().Name;


    protected override void OnInitialized()
    {
        base.OnInitialized();
        GameState.Subscribe(this);
    }

}